<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:d="jelly:define" xmlns:l="/lib/layout" xmlns:t="/lib/hudson" xmlns:f="/lib/form" xmlns:i="jelly:fmt">

<j:set var="url" value="${request.requestURL}" />
<j:if test="${it.getPlugin().shouldDecorationOccursOnURL(url.toString())}">
	<j:set var="scmStrategy" value="${it.getPlugin().getStrategyForURL(url.toString())}" />
	<j:set var="pageMatcher" value="${scmStrategy.getPageMatcherMatching(url.toString())}" />
	<script type="text/javascript">
	YAHOO.namespace("scmSyncConfiguration");
	YAHOO.scmSyncConfiguration.targetFormName = '${pageMatcher.targetFormName}';
	YAHOO.scmSyncConfiguration.commentPopupValidated = false;
	</script>
	<script type="text/javascript"><![CDATA[
	// Hudson hack allowing to override the form.onsubmit generated by hudson-behaviour with
	// a divError check
	new Event.observe(window, 'load', decorateOnsubmitForm);
    function retrieveTargetFormOnPage(){
		var formElts = $$("form");
		for(var i=0; i<formElts.length; i++){
			var form = formElts[i];
			// Tested under IE8 & Chrome : it works well
			// On stackoverflow, doubt are there about IE7 for this implementation ...
			if(form.attributes["name"] != null && form.attributes["name"].value == YAHOO.scmSyncConfiguration.targetFormName){
				return form;
			}
			// Don't work under IE8.. will work with IE7 ?
			if(form.getAttribute("name") == YAHOO.scmSyncConfiguration.targetFormName){
				return form;
			}
        }
        return null;
    }
	function decorateOnsubmitForm(){
		try {
			var form = retrieveTargetFormOnPage();
			if(form != null){
		        form.observe("submit", function(evt){
		            var dontStopEvent = YAHOO.scmSyncConfiguration.commentPopupValidated || enterCommitComment();
		            if(!dontStopEvent){
		                Event.stop(evt);
		            }
		        });
		    } else {
		    	unexpectedError("Cannot retrieve target form on current page !");
		    }
		}catch(ex){ unexpectedError("Exception: "+logProps(ex)); }
        form = null; // memory leak prevention
	}
	
	function unexpectedError(message){
		alertMsg = 'Something went wrong with the scm-sync-configuration plugin !\n';
		alertMsg += 'Please report a JIRA with as much informations as possible (browser, os, current url, error message etc.).\n';
		alertMsg += 'Error message : '+message;
		alert(alertMsg);
	}

	/**
	  * Log l'ensemble des propriétés de l'objet javascript fourni
	  */
	function logProps(obj){
		str = '';
		if(obj == null){
			return "unknown object (null) !";
		} else {
			for(prop in obj)
			{
				str += '['+prop+'='+obj[prop]+'],';
			}
			return "Object : "+obj+" :: "+str;
		}
	}
	
	function ajaxCall(callType, param, successCallback){
		ajaxCall(callType, param, successCallback, false);
	}
	
	function ajaxCall(callType, param, successCallback, skipLoading){
		
		if(!skipLoading){
			YAHOO.namespace("scm.sync.configuration.wait");
			YAHOO.scm.sync.configuration.wait.modalPopup =  
		        new YAHOO.widget.Panel("wait",   
		            { width:"240px",
		              fixedcenter:true,  
		              close:false,  
		              draggable:false,  
		              zindex:4, 
		              modal:true
		            }
		        ); 
		        
			YAHOO.scm.sync.configuration.wait.modalPopup.setHeader("--- Waiting ---");
			YAHOO.scm.sync.configuration.wait.modalPopup.setBody("--- Waiting ---"); 
			YAHOO.scm.sync.configuration.wait.modalPopup.render(document.body);
		}
				
		var ajaxCallParams = {
			onSuccess: function(ret) {
				successCallback.call(null, ret);
				if(!skipLoading){
					YAHOO.scm.sync.configuration.wait.modalPopup.hide();
				}
			},/* For unknown reasons, an exception is thrown after the onSuccess process .. :(
			onException: function(transport, ex) { 
				alert('exception : '+ex);
				if(!skipLoading){
					YAHOO.scm.sync.configuration.wait.modalPopup.hide();
				}
			    throw ex;
			},*/
			onFailure: function(transport) { 
				alert('failure : '+Object.toJSON(transport));
				if(!skipLoading){
					YAHOO.scm.sync.configuration.wait.modalPopup.hide();
				}
			}
		};
		
		if(callType == 'form'){
			$(param).request(ajaxCallParams);
		} else {
			new Ajax.Request(param, ajaxCallParams);
		}
	}	
	
	function enterCommitComment(form){
		YAHOO.namespace("scm.sync.configuration");
		YAHOO.scm.sync.configuration._buttons = [];
	    YAHOO.scm.sync.configuration.handleSubmit = function() {
	    	ajaxCall('form', 'commentForm', function(ret){
				YAHOO.scmSyncConfiguration.commentPopupValidated = true;
		        YAHOO.scm.sync.configuration.modalPopup.hide();
	    		retrieveTargetFormOnPage().submit();
	    	}, true);
	    }
	    YAHOO.scm.sync.configuration.handleCancel = function() {
		    YAHOO.scm.sync.configuration.modalPopup.hide(); 
	    }
	    
		YAHOO.scm.sync.configuration.modalPopup =  
	        new YAHOO.widget.Panel("buildStatConfigForm",   
	            { width:"720px",
	              fixedcenter:true,  
	              close:false,  
	              draggable:false,  
	              zindex:4, 
	              modal:true
	            }
	        ); 
	    
		var currentContext = createTemplateContext();
	    var popupContentTemplate = new Template(getTemplateContent('popupContentTemplate'));
	    content = popupContentTemplate.evaluate(currentContext);
	    
		YAHOO.scm.sync.configuration.modalPopup.setHeader("Commit comment");
		YAHOO.scm.sync.configuration.modalPopup.setBody(content); 
	    YAHOO.scm.sync.configuration.modalPopup.setFooter('<span id="panelFooter" class="button-group"></span>'); 
	    YAHOO.scm.sync.configuration.modalPopup.showEvent.subscribe(function() { 
	        if (this._buttons.length == 0) {
	            this._buttons[0] = new YAHOO.widget.Button({ 
	                type: 'button', 
	                label: "Submit comment", 
	                container: 'panelFooter' 
	            }); 
	            this._buttons[0].on('click', YAHOO.scm.sync.configuration.handleSubmit); 
	            this._buttons[1] = new YAHOO.widget.Button({ 
	                type: 'button', 
	                label: "Cancel", 
	                container: 'panelFooter' 
	            }); 
	            this._buttons[1].on('click', YAHOO.scm.sync.configuration.handleCancel); 
	        }
	    }, YAHOO.scm.sync.configuration, true); 
		YAHOO.scm.sync.configuration.modalPopup.render(document.body);
		
		return false;
	}

	// For some unknown reasons, on firefox, some #{XXX} template variables are replaced by #%7BXXX%7D :(
	function getTemplateContent(templateId){
		var content = $(templateId).innerHTML;
		content = content.replace(new RegExp("%7B", "g"), "{");
		content = content.replace(new RegExp("%7D", "g"), "}");
		return content;
	}

	function createTemplateContext(){
		// Creating context for creation
		var currentContext = {
			rootURL: rootURL
		};
		return currentContext;
	}
	]]></script>
	<div style="display:none" id="popupContentTemplate">
		<form id='commentForm' method='post' action='#{rootURL}/plugin/scm-sync-configuration/submitComment'>
			Comment :<br/>
			<textarea id='comment' name='comment' cols='80' rows='3'></textarea><br/>
			<input type="checkbox" name="dontBotherMe" value="true" />Don't bother me
			<select name="botherType">
				<option value="thisConfig">for this config particularly</option>
				<option value="anyConfigs">for any configs</option>
			</select>
			during
			<select name="botherTime">
				<option value="5">5 min</option>
				<option value="10">10 min</option>
				<option value="15">15 min</option>
				<option value="20">20 min</option>
				<option value="30">30 min</option>
				<option value="45">45 min</option>
				<option value="60">1 hour</option>
				<option value="90">1.5 hour</option>
				<option value="120">2 hours</option>
				<option value="240">4 hours</option>
			</select>
			<input type="hidden" name="currentURL" value="${url.toString()}" />
		</form>
	</div>
    
</j:if>

<j:set var="success" value="${it.getPlugin().getScmSyncConfigurationStatusManager().getLastSuccess()}"/>
<j:if test="${success != null}">
    <j:set var="icon" value="health-80plus" />
    <j:set var="msg" value="Last operation @ ${success}" />
</j:if>
<j:set var="fail" value="${it.getPlugin().getScmSyncConfigurationStatusManager().getLastFail()}"/>
<j:if test="${fail != null}">
    <j:set var="icon" value="error" />
    <j:set var="msg" value="&lt;br/&gt;${fail}&lt;br/&gt;To remove this message, please remove JENKINS_HOME/scm-sync-configuration.*.log files" />
</j:if>

<j:if test="${it.getPlugin().displayStatus}">
    <table width="100%">
        <tr><td id="footer">
            <span style="color:gray">SCM Sync status : <img src="${imagesURL}/16x16/${icon}.png" alt="" height="16" width="16"/>
            ${msg}
            </span>
        </td></tr>
    </table>
</j:if>

</j:jelly>